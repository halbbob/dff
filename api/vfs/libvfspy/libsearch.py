# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
libsearch : used to make research of nodes using matching a given pattern

"""

from sys import version_info

class algorithm(object):
    """
    This class is an interface which must be extended. It allows users to develope
    custom search algorithms.

    """
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")

    def search(self, *args):
        """
        search(self, unsigned char haystack, unsigned int hslen) -> std::list<(unsigned int)>
        search(self, unsigned char haystack, unsigned int hslen, unsigned int count) -> std::list<(unsigned int)>

        1
        """
        return _libsearch.algorithm_search(self, *args)

    def preprocess(self):
        """
        preprocess(self) -> bool

        1
        """
        return _libsearch.algorithm_preprocess(self)

    def setNeedle(self, *args):
        """
        setNeedle(self, unsigned char needle) -> bool

        1
        """
        return _libsearch.algorithm_setNeedle(self, *args)

    def setNeedleSize(self, *args):
        """
        setNeedleSize(self, unsigned int size) -> bool

        1
        """
        return _libsearch.algorithm_setNeedleSize(self, *args)

    def setWildcard(self, *args):
        """
        setWildcard(self, unsigned char wildcard) -> bool

        1
        """
        return _libsearch.algorithm_setWildcard(self, *args)

    def getNeedle(self):
        """
        getNeedle(self) -> unsigned char

        1
        """
        return _libsearch.algorithm_getNeedle(self)

    def getWildcard(self):
        """
        getWildcard(self) -> unsigned char

        1
        """
        return _libsearch.algorithm_getWildcard(self)


class Search(object):
    """
    This class is used to search patterns.

    """
    def __init__(self, *args): 
        """
        __init__(self) -> Search
        __init__(self, unsigned char needle, unsigned int needlesize, unsigned char wildcard) -> Search

        This class is used to search patterns.

        """
        _libsearch.Search_swiginit(self,_libsearch.new_Search(*args))

    def setNeedle(self, *args):
        """
        setNeedle(self, unsigned char n) -> bool

        1
        """
        return _libsearch.Search_setNeedle(self, *args)

    def setNeedleSize(self, *args):
        """
        setNeedleSize(self, unsigned int size) -> bool

        1
        """
        return _libsearch.Search_setNeedleSize(self, *args)

    def setWildcard(self, *args):
        """
        setWildcard(self, unsigned char w) -> bool

        1
        """
        return _libsearch.Search_setWildcard(self, *args)

    def setBlockSize(self, *args):
        """
        setBlockSize(self, unsigned int bs) -> bool

        1
        """
        return _libsearch.Search_setBlockSize(self, *args)

    def setAligned(self, *args):
        """
        setAligned(self, bool aligned) -> bool

        1
        """
        return _libsearch.Search_setAligned(self, *args)

    def run(self, *args):
        """
        run(self, unsigned char haystack, unsigned int hslen) -> std::list<(unsigned int)>
        run(self, unsigned char haystack, unsigned int hslen, unsigned int count) -> std::list<(unsigned int)>

        1
        """
        return _libsearch.Search_run(self, *args)


class bmContext(object):
    """1"""

    def __init__(self): 
        """
        __init__(self) -> bmContext

        1
        """
        _libsearch.bmContext_swiginit(self,_libsearch.new_bmContext())

class BoyerMoore(algorithm):
    """1"""

    def __init__(self, *args): 
        """
        __init__(self) -> BoyerMoore
        __init__(self, unsigned char needle, unsigned int needlesize, unsigned char wildcard) -> BoyerMoore

        1
        """
        _libsearch.BoyerMoore_swiginit(self,_libsearch.new_BoyerMoore(*args))

    def generateBcs(self, *args):
        """
        generateBcs(self, pattern p) -> unsigned char

        1
        """
        return _libsearch.BoyerMoore_generateBcs(self, *args)

    def search(self, *args):
        """
        search(self, unsigned char haystack, unsigned int hslen, unsigned int count) -> std::list<(unsigned int)>
        search(self, unsigned char haystack, unsigned int hslen) -> std::list<(unsigned int)>
        search(self, unsigned char haystack, unsigned int len, pattern p, 
            unsigned char bcs) -> int

        1
        """
        return _libsearch.BoyerMoore_search(self, *args)

class Listui64(object):
    """1"""

    def iterator(self):
        """
        iterator(self) -> SwigPyIterator

        1
        """
        return _libsearch.Listui64_iterator(self)

    def __iter__(self): return self.iterator()
    def __nonzero__(self):
        """
        __nonzero__(self) -> bool

        1
        """
        return _libsearch.Listui64___nonzero__(self)

    def __bool__(self):
        """
        __bool__(self) -> bool

        1
        """
        return _libsearch.Listui64___bool__(self)

    def __len__(self):
        """
        __len__(self) -> std::list<(unsigned long long)>::size_type

        1
        """
        return _libsearch.Listui64___len__(self)

    def pop(self):
        """
        pop(self) -> std::list<(unsigned long long)>::value_type

        1
        """
        return _libsearch.Listui64_pop(self)

    def __getslice__(self, *args):
        """
        __getslice__(self, std::list<(unsigned long long)>::difference_type i, 
            std::list<(unsigned long long)>::difference_type j) -> Listui64

        1
        """
        return _libsearch.Listui64___getslice__(self, *args)

    def __setslice__(self, *args):
        """
        __setslice__(self, std::list<(unsigned long long)>::difference_type i, 
            std::list<(unsigned long long)>::difference_type j, 
            Listui64 v)

        1
        """
        return _libsearch.Listui64___setslice__(self, *args)

    def __delslice__(self, *args):
        """
        __delslice__(self, std::list<(unsigned long long)>::difference_type i, 
            std::list<(unsigned long long)>::difference_type j)

        1
        """
        return _libsearch.Listui64___delslice__(self, *args)

    def __delitem__(self, *args):
        """
        __delitem__(self, std::list<(unsigned long long)>::difference_type i)
        __delitem__(self, PySliceObject slice)

        1
        """
        return _libsearch.Listui64___delitem__(self, *args)

    def __getitem__(self, *args):
        """
        __getitem__(self, PySliceObject slice) -> Listui64
        __getitem__(self, std::list<(unsigned long long)>::difference_type i) -> std::list<(unsigned long long)>::value_type

        1
        """
        return _libsearch.Listui64___getitem__(self, *args)

    def __setitem__(self, *args):
        """
        __setitem__(self, PySliceObject slice, Listui64 v)
        __setitem__(self, std::list<(unsigned long long)>::difference_type i, 
            std::list<(unsigned long long)>::value_type x)

        1
        """
        return _libsearch.Listui64___setitem__(self, *args)

    def append(self, *args):
        """
        append(self, std::list<(unsigned long long)>::value_type x)

        1
        """
        return _libsearch.Listui64_append(self, *args)

    def empty(self):
        """
        empty(self) -> bool

        1
        """
        return _libsearch.Listui64_empty(self)

    def size(self):
        """
        size(self) -> std::list<(unsigned long long)>::size_type

        1
        """
        return _libsearch.Listui64_size(self)

    def clear(self):
        """
        clear(self)

        1
        """
        return _libsearch.Listui64_clear(self)

    def swap(self, *args):
        """
        swap(self, Listui64 v)

        1
        """
        return _libsearch.Listui64_swap(self, *args)

    def get_allocator(self):
        """
        get_allocator(self) -> std::list<(unsigned long long)>::allocator_type

        1
        """
        return _libsearch.Listui64_get_allocator(self)

    def begin(self):
        """
        begin(self) -> std::list<(unsigned long long)>::const_iterator

        1
        """
        return _libsearch.Listui64_begin(self)

    def end(self):
        """
        end(self) -> std::list<(unsigned long long)>::const_iterator

        1
        """
        return _libsearch.Listui64_end(self)

    def rbegin(self):
        """
        rbegin(self) -> std::list<(unsigned long long)>::const_reverse_iterator

        1
        """
        return _libsearch.Listui64_rbegin(self)

    def rend(self):
        """
        rend(self) -> std::list<(unsigned long long)>::const_reverse_iterator

        1
        """
        return _libsearch.Listui64_rend(self)

    def pop_back(self):
        """
        pop_back(self)

        1
        """
        return _libsearch.Listui64_pop_back(self)

    def erase(self, *args):
        """
        erase(self, std::list<(unsigned long long)>::iterator pos) -> std::list<(unsigned long long)>::iterator
        erase(self, std::list<(unsigned long long)>::iterator first, std::list<(unsigned long long)>::iterator last) -> std::list<(unsigned long long)>::iterator

        1
        """
        return _libsearch.Listui64_erase(self, *args)

    def __init__(self, *args): 
        """
        __init__(self) -> Listui64
        __init__(self, Listui64 arg0) -> Listui64
        __init__(self, std::list<(unsigned long long)>::size_type size) -> Listui64
        __init__(self, std::list<(unsigned long long)>::size_type size, std::list<(unsigned long long)>::value_type value) -> Listui64

        1
        """
        _libsearch.Listui64_swiginit(self,_libsearch.new_Listui64(*args))
    def push_back(self, *args):
        """
        push_back(self, std::list<(unsigned long long)>::value_type x)

        1
        """
        return _libsearch.Listui64_push_back(self, *args)

    def front(self):
        """
        front(self) -> std::list<(unsigned long long)>::value_type

        1
        """
        return _libsearch.Listui64_front(self)

    def back(self):
        """
        back(self) -> std::list<(unsigned long long)>::value_type

        1
        """
        return _libsearch.Listui64_back(self)

    def assign(self, *args):
        """
        assign(self, std::list<(unsigned long long)>::size_type n, std::list<(unsigned long long)>::value_type x)

        1
        """
        return _libsearch.Listui64_assign(self, *args)

    def resize(self, *args):
        """
        resize(self, std::list<(unsigned long long)>::size_type new_size)
        resize(self, std::list<(unsigned long long)>::size_type new_size, 
            std::list<(unsigned long long)>::value_type x)

        1
        """
        return _libsearch.Listui64_resize(self, *args)

    def insert(self, *args):
        """
        insert(self, std::list<(unsigned long long)>::iterator pos, std::list<(unsigned long long)>::value_type x) -> std::list<(unsigned long long)>::iterator
        insert(self, std::list<(unsigned long long)>::iterator pos, std::list<(unsigned long long)>::size_type n, 
            std::list<(unsigned long long)>::value_type x)

        1
        """
        return _libsearch.Listui64_insert(self, *args)

    def pop_front(self):
        """
        pop_front(self)

        1
        """
        return _libsearch.Listui64_pop_front(self)

    def push_front(self, *args):
        """
        push_front(self, std::list<(unsigned long long)>::value_type x)

        1
        """
        return _libsearch.Listui64_push_front(self, *args)

    def reverse(self):
        """
        reverse(self)

        1
        """
        return _libsearch.Listui64_reverse(self)

